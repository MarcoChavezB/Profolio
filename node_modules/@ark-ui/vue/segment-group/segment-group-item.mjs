import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { segmentGroupAnatomy } from '@ark-ui/anatomy';
import { ark } from '../factory.mjs';
import { useSegmentGroupContext } from './segment-group-context.mjs';
import { SegmentGroupItemProvider } from './segment-group-item-context.mjs';

const SegmentGroupItem = /* @__PURE__ */ defineComponent((props, {
  slots,
  attrs
}) => {
  const api = useSegmentGroupContext();
  SegmentGroupItemProvider(computed(() => props));
  return () => createVNode(ark.label, mergeProps(api.value.getItemProps(props), segmentGroupAnatomy.build().item.attrs, attrs), {
    default: () => slots.default?.(api.value.getItemState(props))
  });
}, {
  name: 'SegmentGroupItem',
  props: {
    value: {
      type: String,
      required: true
    },
    disabled: {
      type: Boolean,
      default: undefined
    },
    invalid: {
      type: Boolean,
      default: undefined
    }
  }
});

export { SegmentGroupItem };
