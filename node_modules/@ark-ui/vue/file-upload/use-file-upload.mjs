import * as fileUpload from '@zag-js/file-upload';
import { useMachine, normalizeProps } from '@zag-js/vue';
import { ref, computed } from 'vue';
import { useEnvironmentContext } from '../environment/environment-context.mjs';
import { useId } from '../utils.mjs';

const useFileUpload = (props, emit) => {
  const getRootNode = useEnvironmentContext();
  const context = ref(props);
  const [state, send] = useMachine(
    fileUpload.machine({
      ...context.value,
      id: context.value.id ?? useId().value,
      getRootNode,
      onFilesChange: (details) => {
        emit("files-change", details);
      },
      onFileAccept: (details) => {
        emit("file-accept", details);
      },
      onFileReject(details) {
        emit("file-reject", details);
      }
    }),
    { context }
  );
  return computed(() => fileUpload.connect(state.value, send, normalizeProps));
};

export { useFileUpload };
