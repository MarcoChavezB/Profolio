import { declareEmits } from '../utils.mjs';

const props = {
  allowCustomValue: {
    type: Boolean,
    default: void 0
  },
  autoFocus: {
    type: Boolean,
    default: void 0
  },
  closeOnSelect: {
    type: Boolean,
    default: void 0
  },
  dir: {
    type: String
  },
  disabled: {
    type: Boolean,
    default: void 0
  },
  form: {
    type: String
  },
  getRootNode: {
    type: Function
  },
  highlightedValue: {
    type: String
  },
  id: {
    type: String
  },
  ids: {
    type: Object
  },
  inputBehavior: {
    type: String
  },
  inputValue: {
    type: String
  },
  invalid: {
    type: Boolean,
    default: void 0
  },
  loop: {
    type: Boolean,
    default: void 0
  },
  multiple: {
    type: Boolean,
    default: void 0
  },
  name: {
    type: String
  },
  openOnClick: {
    type: Boolean,
    default: void 0
  },
  placeholder: {
    type: String
  },
  positioning: {
    type: Object
  },
  readOnly: {
    type: Boolean,
    default: void 0
  },
  selectOnBlur: {
    type: Boolean,
    default: void 0
  },
  selectionBehavior: {
    type: String
  },
  translations: {
    type: Object
  },
  modelValue: {
    type: Array
  }
};
const emits = declareEmits([
  "highlight-change",
  "input-value-change",
  "open-change",
  "value-change",
  "update:modelValue"
]);

export { emits, props };
