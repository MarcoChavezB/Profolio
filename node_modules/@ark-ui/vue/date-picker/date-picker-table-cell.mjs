import { defineComponent, reactive, computed, createVNode, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { useDatePickerContext } from './date-picker-context.mjs';
import { DatePickerTableCellProvider } from './date-picker-table-cell-context.mjs';
import { useDatePickerViewContext } from './date-picker-view-context.mjs';

const DatePickerTableCell = /* @__PURE__ */ defineComponent((props, {
  slots,
  attrs
}) => {
  const api = useDatePickerContext();
  const view = useDatePickerViewContext();
  // @ts-ignore
  DatePickerTableCellProvider(reactive(props));
  const tableCellProps = computed(() => {
    return {
      day: api.value.getDayTableCellProps,
      month: api.value.getMonthTableCellProps,
      year: api.value.getYearTableCellProps
      // @ts-expect-error use filter guard
    }[view.view](props);
  });
  return () => createVNode(ark.td, mergeProps(tableCellProps.value, attrs), {
    default: () => [slots.default?.(api.value)]
  });
}, {
  name: 'DatePickerTableCell',
  props: {
    columns: {
      type: Number
    },
    disabled: {
      type: Boolean
    },
    value: {
      type: [Number, Object],
      required: true
    },
    visibleRange: {
      type: Object
    }
  }
});

export { DatePickerTableCell };
