'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const vue = require('vue');
const factory = require('../factory.cjs');
const datePickerContext = require('./date-picker-context.cjs');
const datePickerTableCellContext = require('./date-picker-table-cell-context.cjs');
const datePickerViewContext = require('./date-picker-view-context.cjs');

const DatePickerTableCell = /* @__PURE__ */ vue.defineComponent((props, {
  slots,
  attrs
}) => {
  const api = datePickerContext.useDatePickerContext();
  const view = datePickerViewContext.useDatePickerViewContext();
  // @ts-ignore
  datePickerTableCellContext.DatePickerTableCellProvider(vue.reactive(props));
  const tableCellProps = vue.computed(() => {
    return {
      day: api.value.getDayTableCellProps,
      month: api.value.getMonthTableCellProps,
      year: api.value.getYearTableCellProps
      // @ts-expect-error use filter guard
    }[view.view](props);
  });
  return () => vue.createVNode(factory.ark.td, vue.mergeProps(tableCellProps.value, attrs), {
    default: () => [slots.default?.(api.value)]
  });
}, {
  name: 'DatePickerTableCell',
  props: {
    columns: {
      type: Number
    },
    disabled: {
      type: Boolean
    },
    value: {
      type: [Number, Object],
      required: true
    },
    visibleRange: {
      type: Object
    }
  }
});

exports.DatePickerTableCell = DatePickerTableCell;
