import { defineComponent, createVNode, mergeProps, isVNode } from 'vue';
import { ark } from '../factory.mjs';
import { useColorPickerContext } from './color-picker-context.mjs';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
const ColorPickerFormatSelect = /* @__PURE__ */ defineComponent((_, {
  attrs
}) => {
  const api = useColorPickerContext();
  return () => {
    let _slot;
    return createVNode(ark.select, mergeProps(api.value.formatSelectProps, attrs), _isSlot(_slot = ['rgba', 'hsla', 'hsba'].map(format => createVNode(ark.option, {
      "key": format,
      "value": format
    }, _isSlot(format) ? format : {
      default: () => [format]
    }))) ? _slot : {
      default: () => [_slot]
    });
  };
}, {
  name: 'ColorPickerFormatSelect'
});

export { ColorPickerFormatSelect };
