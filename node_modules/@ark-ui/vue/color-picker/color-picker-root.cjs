'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const vue = require('vue');
const factory = require('../factory.cjs');
const presenceContext = require('../presence/presence-context.cjs');
const usePresence = require('../presence/use-presence.cjs');
const presence_props = require('../presence/presence.props.cjs');
const colorPickerContext = require('./color-picker-context.cjs');
const colorPicker_props = require('./color-picker.props.cjs');
const useColorPicker = require('./use-color-picker.cjs');

const ColorPickerRoot = /* @__PURE__ */ vue.defineComponent((props, {
  slots,
  emit,
  attrs
}) => {
  const api = useColorPicker.useColorPicker(props, emit);
  const isOpen = vue.computed(() => api.value.isOpen);
  const presenceProps = vue.computed(() => ({
    present: props.present || isOpen.value,
    lazyMount: props.lazyMount,
    unmountOnExit: props.unmountOnExit
  }));
  const presenceApi = usePresence.usePresence(presenceProps, emit);
  colorPickerContext.ColorPickerProvider(api);
  presenceContext.PresenceProvider(presenceApi);
  return () => vue.createVNode(vue.Fragment, null, [vue.createVNode(factory.ark.div, vue.mergeProps(api.value.rootProps, attrs), {
    default: () => [slots.default?.(api.value)]
  }), vue.createVNode("input", api.value.hiddenInputProps, null)]);
}, {
  name: 'ColorPickerRoot',
  props: {
    ...colorPicker_props.props,
    ...presence_props.props
  },
  emits: [...colorPicker_props.emits, ...presence_props.emits]
});

exports.ColorPickerRoot = ColorPickerRoot;
