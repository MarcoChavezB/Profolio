import { defineComponent, createVNode, Fragment, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { PinInputProvider } from './pin-input-context.mjs';
import { props, emits } from './pin-input.props.mjs';
import { usePinInput } from './use-pin-input.mjs';

const PinInputRoot = /* @__PURE__ */ defineComponent((props, {
  slots,
  attrs,
  emit
}) => {
  const api = usePinInput(props, emit);
  PinInputProvider(api);
  return () => createVNode(Fragment, null, [createVNode(ark.div, mergeProps(api.value.rootProps, attrs), {
    default: () => [slots.default?.(api.value)]
  }), createVNode("input", api.value.hiddenInputProps, null)]);
}, {
  name: 'PinInputRoot',
  props,
  emits
});

export { PinInputRoot };
