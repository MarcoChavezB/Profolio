import { IntlTranslations } from '@zag-js/pin-input';
import type { PropType } from 'vue';
export declare const props: {
    autoFocus: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    blurOnComplete: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    dir: {
        type: PropType<"ltr" | "rtl" | undefined>;
    };
    disabled: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    form: {
        type: PropType<string | undefined>;
    };
    getRootNode: {
        type: PropType<(() => Node | ShadowRoot | Document) | undefined>;
    };
    id: {
        type: PropType<string>;
    };
    ids: {
        type: PropType<Partial<{
            root: string;
            hiddenInput: string;
            label: string;
            control: string;
            input(id: string): string;
        }> | undefined>;
    };
    invalid: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    mask: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    name: {
        type: PropType<string | undefined>;
    };
    otp: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    pattern: {
        type: PropType<string | undefined>;
    };
    placeholder: {
        type: PropType<string | undefined>;
    };
    selectOnFocus: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    translations: {
        type: PropType<IntlTranslations | undefined>;
    };
    type: {
        type: PropType<"numeric" | "alphanumeric" | "alphabetic" | undefined>;
    };
    modelValue: {
        type: PropType<string[] | undefined>;
    };
};
export declare const emits: ("value-change" | "update:modelValue" | "value-invalid" | "value-complete")[];
