import * as presence from '@zag-js/presence';
import { ComputedRef, Ref, type MaybeRef } from 'vue';
import type { Optional } from '../types';
export interface UsePresenceProps extends Optional<presence.Context, 'present'> {
    /**
     * Whether to enable lazy mounting
     * @default false
     */
    lazyMount?: boolean;
    /**
     * Whether to unmount on exit.
     * @default false
     */
    unmountOnExit?: boolean;
}
export type UsePresenceReturn = ReturnType<typeof usePresence>;
export declare const usePresence: (props: MaybeRef<UsePresenceProps>, emit: CallableFunction) => ComputedRef<{
    isPresent: boolean;
    isUnmounted: boolean | undefined;
    presenceProps: {
        ref: Ref<any>;
        hidden: boolean;
        'data-state': string;
    };
}>;
