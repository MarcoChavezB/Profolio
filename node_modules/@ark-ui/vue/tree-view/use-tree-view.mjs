import * as treeView from '@zag-js/tree-view';
import { useMachine, normalizeProps } from '@zag-js/vue';
import { ref, computed } from 'vue';
import { useEnvironmentContext } from '../environment/environment-context.mjs';
import { useId } from '../utils.mjs';

const useTreeView = (props, emit) => {
  const getRootNode = useEnvironmentContext();
  const context = ref(props);
  const [state, send] = useMachine(
    treeView.machine({
      ...context.value,
      id: context.value.id ?? useId().value,
      getRootNode,
      onFocusChange: (details) => {
        emit("focus-change", details);
      },
      onExpandedChange: (details) => {
        emit("expanded-change", details);
      },
      onSelectionChange: (details) => {
        emit("selection-change", details);
      }
    }),
    { context }
  );
  return computed(() => treeView.connect(state.value, send, normalizeProps));
};

export { useTreeView };
