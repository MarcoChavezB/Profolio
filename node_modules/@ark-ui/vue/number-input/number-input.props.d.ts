import { IntlTranslations } from '@zag-js/number-input';
import type { PropType } from 'vue';
export declare const props: {
    allowMouseWheel: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    allowOverflow: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    clampValueOnBlur: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    dir: {
        type: PropType<"ltr" | "rtl" | undefined>;
    };
    disabled: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    focusInputOnChange: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    form: {
        type: PropType<string | undefined>;
    };
    formatOptions: {
        type: PropType<Intl.NumberFormatOptions | undefined>;
    };
    getRootNode: {
        type: PropType<(() => Node | ShadowRoot | Document) | undefined>;
    };
    id: {
        type: PropType<string>;
    };
    ids: {
        type: PropType<Partial<{
            root: string;
            label: string;
            input: string;
            incrementTrigger: string;
            decrementTrigger: string;
            scrubber: string;
        }> | undefined>;
    };
    inputMode: {
        type: PropType<("text" | "tel" | "numeric" | "decimal") | undefined>;
    };
    invalid: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    locale: {
        type: PropType<string | undefined>;
    };
    max: {
        type: PropType<number | undefined>;
    };
    min: {
        type: PropType<number | undefined>;
    };
    name: {
        type: PropType<string | undefined>;
    };
    pattern: {
        type: PropType<string | undefined>;
    };
    readOnly: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    spinOnPress: {
        type: PropType<boolean | undefined>;
        default: undefined;
    };
    step: {
        type: PropType<number | undefined>;
    };
    translations: {
        type: PropType<IntlTranslations | undefined>;
    };
    modelValue: {
        type: PropType<string | undefined>;
    };
};
export declare const emits: ("focus-change" | "value-change" | "update:modelValue" | "value-invalid")[];
