import { defineComponent, computed, createVNode, Fragment, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { useSelectContext } from './select-context.mjs';

const SelectControl = /* @__PURE__ */ defineComponent((_, {
  slots,
  attrs
}) => {
  const api = useSelectContext();
  const isValueEmpty = computed(() => api.value.value.length === 0);
  return () => createVNode(Fragment, null, [createVNode(ark.div, mergeProps(api.value.controlProps, attrs), {
    default: () => [slots.default?.()]
  }), createVNode("select", api.value.hiddenSelectProps, [isValueEmpty.value && createVNode("option", {
    "value": ""
  }, null), api.value.collection.toArray().map(option => createVNode("option", {
    "key": option.value,
    "value": option.value
  }, [option.label]))])]);
}, {
  name: 'SelectControl'
});

export { SelectControl };
