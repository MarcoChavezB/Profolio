import type { CollectionOptions } from '@zag-js/select';
import * as select from '@zag-js/select';
import { type PropTypes } from '@zag-js/vue';
import { type ComputedRef } from 'vue';
import type { CollectionItem, Optional } from '../types';
export interface UseSelectProps<T extends CollectionItem> extends CollectionOptions<T>, Omit<Optional<select.Context<T>, 'id'>, 'collection'> {
    modelValue?: select.Context<T>['value'];
}
export interface UseSelectReturn<T extends CollectionItem> extends ComputedRef<select.Api<PropTypes, T>> {
}
export declare const useSelect: <T extends CollectionItem>(props: UseSelectProps<T>, emit: CallableFunction) => UseSelectReturn<T>;
