import * as avatar from '@zag-js/avatar';
import { useMachine, normalizeProps } from '@zag-js/vue';
import { ref, computed } from 'vue';
import { useEnvironmentContext } from '../environment/environment-context.mjs';
import { useId } from '../utils.mjs';

const useAvatar = (props, emit) => {
  const getRootNode = useEnvironmentContext();
  const context = ref(props);
  const [state, send] = useMachine(
    avatar.machine({
      ...context.value,
      id: context.value.id ?? useId().value,
      getRootNode,
      onLoadingStatusChange: (details) => {
        emit("loading-status-change", details);
      }
    }),
    { context }
  );
  return computed(() => avatar.connect(state.value, send, normalizeProps));
};

export { useAvatar };
