'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const vue = require('vue');
const factory = require('../factory.cjs');
const presenceContext = require('../presence/presence-context.cjs');
const presencePropsContext = require('../presence/presence-props-context.cjs');
const usePresence = require('../presence/use-presence.cjs');
const presence_props = require('../presence/presence.props.cjs');
const accordionContext = require('./accordion-context.cjs');
const accordionItemContext = require('./accordion-item-context.cjs');

const AccordionItem = /* @__PURE__ */ vue.defineComponent((props, {
  slots,
  attrs,
  emit
}) => {
  const api = accordionContext.useAccordionContext();
  const itemState = vue.computed(() => api.value.getItemState(props));
  const presenceProps = presencePropsContext.usePresencePropsContext();
  const usePresenceProps = vue.computed(() => ({
    ...presenceProps.value,
    present: itemState.value.isOpen
  }));
  const presenceApi = usePresence.usePresence(usePresenceProps, emit);
  accordionItemContext.AccordionItemProvider(vue.computed(() => props));
  presenceContext.PresenceProvider(presenceApi);
  return () => vue.createVNode(factory.ark.div, vue.mergeProps(api.value.getItemProps(props), attrs), {
    default: () => [slots.default?.(itemState.value)]
  });
}, {
  name: 'AccordionItem',
  props: {
    value: {
      type: String,
      required: true
    },
    disabled: {
      type: Boolean,
      default: undefined
    }
  },
  emits: presence_props.emits
});

exports.AccordionItem = AccordionItem;
