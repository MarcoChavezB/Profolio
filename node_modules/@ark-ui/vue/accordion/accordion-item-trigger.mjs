import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { usePresenceContext } from '../presence/presence-context.mjs';
import { useAccordionContext } from './accordion-context.mjs';
import { useAccordionItemContext } from './accordion-item-context.mjs';

const AccordionItemTrigger = /* @__PURE__ */ defineComponent((_, {
  attrs,
  slots
}) => {
  const api = useAccordionContext();
  const item = useAccordionItemContext();
  const presenceApi = usePresenceContext();
  const triggerProps = computed(() => api.value.getItemTriggerProps(item.value));
  const ariaProps = computed(() => ({
    'aria-controls': presenceApi.value.isUnmounted ? undefined : triggerProps.value['aria-controls']
  }));
  return () => createVNode(ark.button, mergeProps(triggerProps.value, ariaProps.value, attrs), {
    default: () => [slots.default?.()]
  });
}, {
  name: 'AccordionItemTrigger'
});

export { AccordionItemTrigger };
