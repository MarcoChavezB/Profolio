'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const vue = require('vue');
const presenceContext = require('../presence/presence-context.cjs');
const usePresence = require('../presence/use-presence.cjs');
const presence_props = require('../presence/presence.props.cjs');
const menuContext = require('./menu-context.cjs');
const menu_props = require('./menu.props.cjs');
const useMenu = require('./use-menu.cjs');

const MenuRoot = /* @__PURE__ */ vue.defineComponent((props, {
  slots,
  emit
}) => {
  const {
    api,
    machine
  } = useMenu.useMenu(props, emit);
  const parentApi = menuContext.useMenuContext();
  const parentMachine = menuContext.useMenuMachineContext();
  vue.onMounted(() => {
    if (!parentMachine) return;
    parentApi.value.setChild(machine);
    api.value.setParent(parentMachine);
  });
  const isOpen = vue.computed(() => api.value.isOpen);
  const presenceProps = vue.computed(() => ({
    present: props.present || isOpen.value,
    lazyMount: props.lazyMount,
    unmountOnExit: props.unmountOnExit
  }));
  const presenceApi = usePresence.usePresence(presenceProps, emit);
  menuContext.MenuTriggerItemProvider(vue.computed(() => parentApi.value.getTriggerItemProps(api.value)));
  menuContext.MenuMachineProvider(machine);
  menuContext.MenuProvider(api);
  presenceContext.PresenceProvider(presenceApi);
  return () => {
    return slots.default?.(api.value);
  };
}, {
  name: 'MenuRoot',
  props: {
    ...menu_props.props,
    ...presence_props.props
  },
  emits: [...menu_props.emits, ...presence_props.emits]
});

exports.MenuRoot = MenuRoot;
