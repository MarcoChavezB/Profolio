import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { useMenuContext } from './menu-context.mjs';

const MenuOptionItem = /* @__PURE__ */ defineComponent((props, {
  slots,
  attrs,
  emit
}) => {
  const menuOptionItemProps = computed(() => ({
    ...props,
    onCheckedChange(checked) {
      emit('checked-change', checked);
    }
  }));
  const api = useMenuContext();
  return () => createVNode(ark.div, mergeProps(api.value.getOptionItemProps(menuOptionItemProps.value), attrs), {
    default: () => [slots.default?.(api.value.getOptionItemState(menuOptionItemProps.value))]
  });
}, {
  name: 'MenuOptionItem',
  props: {
    id: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: undefined
    },
    valueText: {
      type: String,
      default: undefined
    },
    closeOnSelect: {
      type: Boolean,
      default: undefined
    },
    name: {
      type: String,
      required: true
    },
    type: {
      type: String,
      required: true
    },
    value: {
      type: String,
      required: true
    }
  },
  emits: ['checked-change']
});

export { MenuOptionItem };
