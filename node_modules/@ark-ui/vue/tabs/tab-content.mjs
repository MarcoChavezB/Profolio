import { defineComponent, computed, createVNode, Fragment, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { PresenceProvider } from '../presence/presence-context.mjs';
import { usePresencePropsContext } from '../presence/presence-props-context.mjs';
import { usePresence } from '../presence/use-presence.mjs';
import { emits } from '../presence/presence.props.mjs';
import { useTabsContext } from './tabs-context.mjs';

const TabContent = /* @__PURE__ */ defineComponent((props, {
  slots,
  attrs,
  emit
}) => {
  const api = useTabsContext();
  const presenceProps = usePresencePropsContext();
  const usePresenceProps = computed(() => ({
    ...presenceProps.value,
    present: api.value.value === props.value
  }));
  const presenceApi = usePresence(usePresenceProps, emit);
  PresenceProvider(presenceApi);
  return () => createVNode(Fragment, null, [presenceApi.value.isUnmounted ? null : createVNode(ark.div, mergeProps(api.value.getContentProps(props), attrs), {
    default: () => [slots.default?.()]
  })]);
}, {
  name: 'TabContent',
  props: {
    value: {
      type: String,
      required: true
    }
  },
  emits
});

export { TabContent };
