import * as tabs from '@zag-js/tabs';
import { useMachine, normalizeProps } from '@zag-js/vue';
import { computed } from 'vue';
import { useEnvironmentContext } from '../environment/environment-context.mjs';
import { useId } from '../utils.mjs';

const useTabs = (props, emit) => {
  const getRootNode = useEnvironmentContext();
  const context = computed(() => {
    const { modelValue, ...rest } = props;
    return {
      ...rest,
      value: modelValue
    };
  });
  const [state, send] = useMachine(
    tabs.machine({
      ...context.value,
      id: context.value.id ?? useId().value,
      getRootNode,
      onFocusChange: (details) => {
        emit("focus-change", details);
      },
      onValueChange: (details) => {
        emit("value-change", details);
        emit("update:modelValue", details.value);
      }
    }),
    { context }
  );
  return computed(() => tabs.connect(state.value, send, normalizeProps));
};

export { useTabs };
