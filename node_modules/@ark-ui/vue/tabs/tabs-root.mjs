import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { ark } from '../factory.mjs';
import { PresencePropsProvider } from '../presence/presence-props-context.mjs';
import { props as props$1, emits as emits$1 } from '../presence/presence.props.mjs';
import { TabsProvider } from './tabs-context.mjs';
import { props, emits } from './tabs.props.mjs';
import { useTabs } from './use-tabs.mjs';

const TabsRoot = /* @__PURE__ */ defineComponent((props, {
  slots,
  attrs,
  emit
}) => {
  const api = useTabs(props, emit);
  const presenceProps = computed(() => ({
    present: props.present,
    lazyMount: props.lazyMount,
    unmountOnExit: props.unmountOnExit
  }));
  TabsProvider(api);
  PresencePropsProvider(presenceProps);
  return () => createVNode(ark.div, mergeProps(api.value.rootProps, attrs), {
    default: () => [slots.default?.(api.value)]
  });
}, {
  name: 'TabsRoot',
  props: {
    ...props,
    ...props$1
  },
  emits: [...emits, ...emits$1]
});

export { TabsRoot };
