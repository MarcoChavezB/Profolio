import * as _zag_js_core from '@zag-js/core';
import { StateMachine, Machine, MachineSrc } from '@zag-js/core';
export { ContextFrom, EventFrom, StateFrom, mergeProps } from '@zag-js/core';
import * as _zag_js_types from '@zag-js/types';
import * as Vue from 'vue';
import { Ref, ComputedRef } from 'vue';

type ReservedProps = {
    key?: string | number | symbol;
    ref?: Vue.VNodeRef;
};
type Attrs<T> = T & ReservedProps;
type PropTypes = Vue.NativeElements & {
    element: Attrs<Vue.HTMLAttributes>;
    style: Vue.CSSProperties;
};
declare const normalizeProps: _zag_js_types.NormalizeProps<PropTypes>;

declare function useActor<TContext extends Record<string, any>, TState extends StateMachine.StateSchema, TEvent extends StateMachine.EventObject = StateMachine.AnyEventObject>(service: Machine<TContext, TState, TEvent>): readonly [Vue.Ref<StateMachine.State<TContext, TState, TEvent>>, (evt: StateMachine.Event<TEvent>) => void];

type MachineOptions<TContext extends Record<string, any>, TState extends StateMachine.StateSchema, TEvent extends StateMachine.EventObject = StateMachine.AnyEventObject> = Omit<StateMachine.HookOptions<TContext, TState, TEvent>, "context"> & {
    context?: Ref<StateMachine.UserContext<TContext>> | ComputedRef<StateMachine.UserContext<TContext>>;
};

declare function useMachine<TContext extends Record<string, any>, TState extends StateMachine.StateSchema, TEvent extends StateMachine.EventObject = StateMachine.AnyEventObject>(machine: MachineSrc<TContext, TState, TEvent>, options?: MachineOptions<TContext, TState, TEvent>): readonly [Vue.Ref<StateMachine.State<TContext, TState, TEvent>>, (evt: StateMachine.Event<TEvent>) => void, _zag_js_core.Machine<TContext, TState, TEvent>];

declare function useSnapshot<TContext extends Record<string, any>, TState extends StateMachine.StateSchema, TEvent extends StateMachine.EventObject = StateMachine.AnyEventObject>(service: Machine<TContext, TState, TEvent>, options?: MachineOptions<TContext, TState, TEvent>): Ref<StateMachine.State<TContext, TState, TEvent>>;

export { type PropTypes, normalizeProps, useActor, useMachine, useSnapshot };
